name: Test

on:
  push:
  pull_request:
    types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9, 3.10]
      fail-fast: false

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      - name: Install poetry
        run: |
          python -m pip install --upgrade pip
          python -m pip install poetry
          python -m pip install flake8 pytest
          # if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Configure poetry
        run: python -m poetry config virtualenvs.in-project true
        # - name: Set up cache
        #   uses: actions/cache@v1
        #   id: cache
        #   with:
        #     path: .venv
        #     key: venv-${{ runner.os }}-${{ steps.full-python-version.outputs.version }}-${{ hashFiles('**/poetry.lock') }}
        # - name: Ensure cache is healthy
        #   if: steps.cache.outputs.cache-hit == 'true'
        #     run: python -m poetry run pip --version >/dev/null 2>&1 || rm -rf .venv
      - name: Install python dependencies
        run: python -m poetry install
      # - name: Test
      #   run: python -m poetry run bash scripts/test.sh
      # - name: Upload code coverage
      #   uses: codecov/codecov-action@v1

